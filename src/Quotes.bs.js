// Generated by BUCKLESCRIPT VERSION 5.0.6, PLEASE EDIT WITH CARE
'use strict';

var $$String = require("bs-platform/lib/js/string.js");
var Tea_app = require("bucklescript-tea/src-ocaml/tea_app.js");
var Tea_cmd = require("bucklescript-tea/src-ocaml/tea_cmd.js");
var Tea_sub = require("bucklescript-tea/src-ocaml/tea_sub.js");
var Tea_html = require("bucklescript-tea/src-ocaml/tea_html.js");
var Tea_http = require("bucklescript-tea/src-ocaml/tea_http.js");
var Tea_json = require("bucklescript-tea/src-ocaml/tea_json.js");

var host = "https://kberridge-test.builtwithdark.com";

var getQuoteUrl = $$String.concat("", /* :: */[
      host,
      /* :: */[
        "/quote",
        /* [] */0
      ]
    ]);

function getDifferentQuoteUrl(quote) {
  if (quote !== undefined) {
    return $$String.concat("", /* :: */[
                host,
                /* :: */[
                  "/quote",
                  /* :: */[
                    "?not=",
                    /* :: */[
                      quote[/* key */2],
                      /* [] */0
                    ]
                  ]
                ]
              ]);
  } else {
    return getQuoteUrl;
  }
}

function gotQuoteResponse(param_0) {
  return /* GotQuoteResponse */[param_0];
}

function init(param) {
  return /* tuple */[
          /* record */[
            /* currentQuote */undefined,
            /* failed */false
          ],
          Tea_http.send(gotQuoteResponse, Tea_http.getString(getQuoteUrl))
        ];
}

function update(model, param) {
  if (param) {
    var match = param[0];
    if (match.tag) {
      return /* tuple */[
              /* record */[
                /* currentQuote */undefined,
                /* failed */true
              ],
              Tea_cmd.none
            ];
    } else {
      var quote_decoder = Tea_json.Decoder[/* map3 */18]((function (x, y, z) {
              return /* record */[
                      /* quote */y,
                      /* attribution */z,
                      /* key */x
                    ];
            }), Tea_json.Decoder[/* field */11]("key", Tea_json.Decoder[/* string */2]), Tea_json.Decoder[/* field */11]("quote", Tea_json.Decoder[/* string */2]), Tea_json.Decoder[/* maybe */14](Tea_json.Decoder[/* field */11]("attribution", Tea_json.Decoder[/* string */2])));
      var match$1 = Tea_json.Decoder[/* decodeString */32](quote_decoder, match[0]);
      var tmp;
      tmp = match$1.tag ? /* record */[
          /* currentQuote */undefined,
          /* failed */true
        ] : /* record */[
          /* currentQuote */match$1[0],
          /* failed */false
        ];
      return /* tuple */[
              tmp,
              Tea_cmd.none
            ];
    }
  } else {
    return /* tuple */[
            model,
            Tea_http.send(gotQuoteResponse, Tea_http.getString(getDifferentQuoteUrl(model[/* currentQuote */0])))
          ];
  }
}

function viewQuote(quote) {
  var match = quote[/* attribution */1];
  return Tea_html.div(undefined, undefined, /* [] */0, /* :: */[
              Tea_html.div(undefined, undefined, /* [] */0, /* :: */[
                    Tea_html.text(quote[/* quote */0]),
                    /* [] */0
                  ]),
              /* :: */[
                match !== undefined ? Tea_html.div(undefined, undefined, /* :: */[
                        Tea_html.style("padding-left", "2em"),
                        /* [] */0
                      ], /* :: */[
                        Tea_html.text($$String.concat("", /* :: */[
                                  "-",
                                  /* :: */[
                                    match,
                                    /* [] */0
                                  ]
                                ])),
                        /* [] */0
                      ]) : Tea_html.noNode,
                /* [] */0
              ]
            ]);
}

function view(model) {
  var match = model[/* failed */1];
  var tmp;
  if (match) {
    tmp = /* :: */[
      Tea_html.div(undefined, undefined, /* :: */[
            Tea_html.style("color", "red"),
            /* [] */0
          ], /* :: */[
            Tea_html.text("Something has gone terribly, terribly wrong!"),
            /* [] */0
          ]),
      /* [] */0
    ];
  } else {
    var match$1 = model[/* currentQuote */0];
    tmp = match$1 !== undefined ? /* :: */[
        viewQuote(match$1),
        /* [] */0
      ] : /* :: */[
        Tea_html.text("fetching quote, hold on a sec..."),
        /* [] */0
      ];
  }
  var match$2 = model[/* currentQuote */0];
  return Tea_html.div(undefined, undefined, /* [] */0, /* :: */[
              Tea_html.header(undefined, undefined, /* :: */[
                    Tea_html.style("text-align", "center"),
                    /* [] */0
                  ], /* :: */[
                    Tea_html.h1(undefined, undefined, /* [] */0, /* :: */[
                          Tea_html.text("Quotes, from Dark Lang!"),
                          /* [] */0
                        ]),
                    /* [] */0
                  ]),
              /* :: */[
                Tea_html.div(undefined, undefined, /* :: */[
                      Tea_html.style("display", "flex"),
                      /* :: */[
                        Tea_html.style("justify-content", "center"),
                        /* [] */0
                      ]
                    ], tmp),
                /* :: */[
                  match$2 !== undefined ? Tea_html.div(undefined, undefined, /* :: */[
                          Tea_html.style("display", "flex"),
                          /* :: */[
                            Tea_html.style("justify-content", "center"),
                            /* :: */[
                              Tea_html.style("padding-top", "2em"),
                              /* [] */0
                            ]
                          ]
                        ], /* :: */[
                          Tea_html.button(undefined, undefined, /* :: */[
                                Tea_html.onClick(/* GetDifferentQuote */0),
                                /* [] */0
                              ], /* :: */[
                                Tea_html.text("Get a different quote"),
                                /* [] */0
                              ]),
                          /* [] */0
                        ]) : Tea_html.noNode,
                  /* [] */0
                ]
              ]
            ]);
}

function partial_arg_003(param) {
  return Tea_sub.none;
}

var partial_arg = /* record */[
  /* init */init,
  /* update */update,
  /* view */view,
  partial_arg_003
];

function main(param, param$1) {
  return Tea_app.standardProgram(partial_arg, param, param$1);
}

var getDifferentQuote = /* GetDifferentQuote */0;

exports.host = host;
exports.getQuoteUrl = getQuoteUrl;
exports.getDifferentQuoteUrl = getDifferentQuoteUrl;
exports.gotQuoteResponse = gotQuoteResponse;
exports.getDifferentQuote = getDifferentQuote;
exports.init = init;
exports.update = update;
exports.viewQuote = viewQuote;
exports.view = view;
exports.main = main;
/* getQuoteUrl Not a pure module */
